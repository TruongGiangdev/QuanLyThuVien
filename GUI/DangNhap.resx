<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>